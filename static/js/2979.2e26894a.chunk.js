"use strict";(self.webpackChunkndzy_app=self.webpackChunkndzy_app||[]).push([[2979],{2979:(e,t,n)=>{n.r(t),n.d(t,{php:()=>i,phpLanguage:()=>r});var a=n(5420),o=n(205),s=n(398),l=n(2850);const r=l.bj.define({name:"php",parser:a.K.configure({props:[l.Oh.add({IfStatement:(0,l.mz)({except:/^\s*({|else\b|elseif\b|endif\b)/}),TryStatement:(0,l.mz)({except:/^\s*({|catch\b|finally\b)/}),SwitchBody:e=>{let t=e.textAfter,n=/^\s*\}/.test(t),a=/^\s*(case|default)\b/.test(t);return e.baseIndent+(n?0:a?1:2)*e.unit},ColonBlock:e=>e.baseIndent+e.unit,"Block EnumBody DeclarationList":(0,l.Ay)({closing:"}"}),ArrowFunction:e=>e.baseIndent+e.unit,"String BlockComment":()=>null,Statement:(0,l.mz)({except:/^({|end(for|foreach|switch|while)\b)/})}),l.b_.add({"Block EnumBody DeclarationList SwitchBody ArrayExpression ValueList":l.yd,ColonBlock:e=>({from:e.from+1,to:e.to}),BlockComment:e=>({from:e.from+2,to:e.to-2})})]}),languageData:{commentTokens:{block:{open:"/*",close:"*/"},line:"//"},indentOnInput:/^\s*(?:case |default:|end(?:if|for(?:each)?|switch|while)|else(?:if)?|\{|\})$/,wordChars:"$",closeBrackets:{stringPrefixes:["b","B"]}}});function i(){let e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=[];if(null===t.baseLanguage);else if(t.baseLanguage)e=t.baseLanguage;else{let t=(0,s.html)({matchClosingTags:!1});n.push(t.support),e=t.language}return new l.Yy(r.configure({wrap:e&&(0,o.$g)((t=>t.type.isTop?{parser:e.parser,overlay:e=>"Text"==e.name}:null)),top:t.plain?"Program":"Template"}),n)}}}]);